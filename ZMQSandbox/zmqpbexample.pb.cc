// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zmqpbexample.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "zmqpbexample.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class ZmqPBExampleRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ZmqPBExampleRequest> {
} _ZmqPBExampleRequest_default_instance_;
class ZmqPBExampleResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ZmqPBExampleResponse> {
} _ZmqPBExampleResponse_default_instance_;
class ZmqPBExampleRPCRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ZmqPBExampleRPCRequest> {
} _ZmqPBExampleRPCRequest_default_instance_;
class ZmqPBExampleRPCResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ZmqPBExampleRPCResponse> {
} _ZmqPBExampleRPCResponse_default_instance_;
class RPCAddRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RPCAddRequest> {
} _RPCAddRequest_default_instance_;
class RPCAddResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RPCAddResponse> {
} _RPCAddResponse_default_instance_;
class RPCReverseRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RPCReverseRequest> {
} _RPCReverseRequest_default_instance_;
class RPCReverseResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RPCReverseResponse> {
} _RPCReverseResponse_default_instance_;
class ZmqPBExampleWeatherDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ZmqPBExampleWeather> {
} _ZmqPBExampleWeather_default_instance_;
class ZmqPBExampleWorkerRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ZmqPBExampleWorkerRequest> {
} _ZmqPBExampleWorkerRequest_default_instance_;
class ZmqPBExampleWorkerResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ZmqPBExampleWorkerResponse> {
} _ZmqPBExampleWorkerResponse_default_instance_;

namespace protobuf_zmqpbexample_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[11];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZmqPBExampleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZmqPBExampleRequest, request_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZmqPBExampleRequest, request_number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZmqPBExampleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZmqPBExampleResponse, response_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZmqPBExampleResponse, response_number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZmqPBExampleRPCRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZmqPBExampleRPCRequest, service_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZmqPBExampleRPCRequest, method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZmqPBExampleRPCRequest, protobuf_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZmqPBExampleRPCResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZmqPBExampleRPCResponse, protobuf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZmqPBExampleRPCResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RPCAddRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RPCAddRequest, term1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RPCAddRequest, term2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RPCAddResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RPCAddResponse, sum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RPCReverseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RPCReverseRequest, to_reverse_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RPCReverseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RPCReverseResponse, reversed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZmqPBExampleWeather, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZmqPBExampleWeather, zipcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZmqPBExampleWeather, temperature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZmqPBExampleWeather, relhumidity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZmqPBExampleWorkerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZmqPBExampleWorkerRequest, string_in_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZmqPBExampleWorkerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZmqPBExampleWorkerResponse, string_out_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(ZmqPBExampleRequest)},
  { 7, -1, sizeof(ZmqPBExampleResponse)},
  { 14, -1, sizeof(ZmqPBExampleRPCRequest)},
  { 22, -1, sizeof(ZmqPBExampleRPCResponse)},
  { 29, -1, sizeof(RPCAddRequest)},
  { 36, -1, sizeof(RPCAddResponse)},
  { 42, -1, sizeof(RPCReverseRequest)},
  { 48, -1, sizeof(RPCReverseResponse)},
  { 54, -1, sizeof(ZmqPBExampleWeather)},
  { 62, -1, sizeof(ZmqPBExampleWorkerRequest)},
  { 68, -1, sizeof(ZmqPBExampleWorkerResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ZmqPBExampleRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ZmqPBExampleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ZmqPBExampleRPCRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ZmqPBExampleRPCResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RPCAddRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RPCAddResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RPCReverseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RPCReverseResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ZmqPBExampleWeather_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ZmqPBExampleWorkerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ZmqPBExampleWorkerResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "zmqpbexample.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

}  // namespace

void TableStruct::Shutdown() {
  _ZmqPBExampleRequest_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ZmqPBExampleResponse_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _ZmqPBExampleRPCRequest_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _ZmqPBExampleRPCResponse_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _RPCAddRequest_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _RPCAddResponse_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _RPCReverseRequest_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _RPCReverseResponse_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _ZmqPBExampleWeather_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _ZmqPBExampleWorkerRequest_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _ZmqPBExampleWorkerResponse_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ZmqPBExampleRequest_default_instance_.DefaultConstruct();
  _ZmqPBExampleResponse_default_instance_.DefaultConstruct();
  _ZmqPBExampleRPCRequest_default_instance_.DefaultConstruct();
  _ZmqPBExampleRPCResponse_default_instance_.DefaultConstruct();
  _RPCAddRequest_default_instance_.DefaultConstruct();
  _RPCAddResponse_default_instance_.DefaultConstruct();
  _RPCReverseRequest_default_instance_.DefaultConstruct();
  _RPCReverseResponse_default_instance_.DefaultConstruct();
  _ZmqPBExampleWeather_default_instance_.DefaultConstruct();
  _ZmqPBExampleWorkerRequest_default_instance_.DefaultConstruct();
  _ZmqPBExampleWorkerResponse_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\022zmqpbexample.proto\"E\n\023ZmqPBExampleRequ"
      "est\022\026\n\016request_string\030\001 \001(\t\022\026\n\016request_n"
      "umber\030\002 \001(\005\"H\n\024ZmqPBExampleResponse\022\027\n\017r"
      "esponse_string\030\001 \001(\t\022\027\n\017response_number\030"
      "\002 \001(\005\"K\n\026ZmqPBExampleRPCRequest\022\017\n\007servi"
      "ce\030\001 \001(\t\022\016\n\006method\030\002 \001(\t\022\020\n\010protobuf\030\003 \001"
      "(\014\":\n\027ZmqPBExampleRPCResponse\022\020\n\010protobu"
      "f\030\001 \001(\014\022\r\n\005error\030\002 \001(\t\"-\n\rRPCAddRequest\022"
      "\r\n\005term1\030\001 \001(\r\022\r\n\005term2\030\002 \001(\r\"\035\n\016RPCAddR"
      "esponse\022\013\n\003sum\030\001 \001(\r\"\'\n\021RPCReverseReques"
      "t\022\022\n\nto_reverse\030\001 \001(\t\"&\n\022RPCReverseRespo"
      "nse\022\020\n\010reversed\030\001 \001(\t\"P\n\023ZmqPBExampleWea"
      "ther\022\017\n\007zipcode\030\001 \001(\r\022\023\n\013temperature\030\002 \001"
      "(\r\022\023\n\013relhumidity\030\003 \001(\r\".\n\031ZmqPBExampleW"
      "orkerRequest\022\021\n\tstring_in\030\001 \001(\t\"0\n\032ZmqPB"
      "ExampleWorkerResponse\022\022\n\nstring_out\030\001 \001("
      "\t*:\n\010RPCError\022\016\n\nNO_SERVICE\020\000\022\r\n\tNO_METH"
      "OD\020\001\022\017\n\013BAD_REQUEST\020\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 709);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "zmqpbexample.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_zmqpbexample_2eproto

const ::google::protobuf::EnumDescriptor* RPCError_descriptor() {
  protobuf_zmqpbexample_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zmqpbexample_2eproto::file_level_enum_descriptors[0];
}
bool RPCError_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZmqPBExampleRequest::kRequestStringFieldNumber;
const int ZmqPBExampleRequest::kRequestNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZmqPBExampleRequest::ZmqPBExampleRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zmqpbexample_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ZmqPBExampleRequest)
}
ZmqPBExampleRequest::ZmqPBExampleRequest(const ZmqPBExampleRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_string().size() > 0) {
    request_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_string_);
  }
  request_number_ = from.request_number_;
  // @@protoc_insertion_point(copy_constructor:ZmqPBExampleRequest)
}

void ZmqPBExampleRequest::SharedCtor() {
  request_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_number_ = 0;
  _cached_size_ = 0;
}

ZmqPBExampleRequest::~ZmqPBExampleRequest() {
  // @@protoc_insertion_point(destructor:ZmqPBExampleRequest)
  SharedDtor();
}

void ZmqPBExampleRequest::SharedDtor() {
  request_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ZmqPBExampleRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZmqPBExampleRequest::descriptor() {
  protobuf_zmqpbexample_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zmqpbexample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ZmqPBExampleRequest& ZmqPBExampleRequest::default_instance() {
  protobuf_zmqpbexample_2eproto::InitDefaults();
  return *internal_default_instance();
}

ZmqPBExampleRequest* ZmqPBExampleRequest::New(::google::protobuf::Arena* arena) const {
  ZmqPBExampleRequest* n = new ZmqPBExampleRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZmqPBExampleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ZmqPBExampleRequest)
  request_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_number_ = 0;
}

bool ZmqPBExampleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ZmqPBExampleRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string request_string = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_string().data(), this->request_string().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ZmqPBExampleRequest.request_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 request_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &request_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ZmqPBExampleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ZmqPBExampleRequest)
  return false;
#undef DO_
}

void ZmqPBExampleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ZmqPBExampleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_string = 1;
  if (this->request_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_string().data(), this->request_string().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ZmqPBExampleRequest.request_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_string(), output);
  }

  // int32 request_number = 2;
  if (this->request_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->request_number(), output);
  }

  // @@protoc_insertion_point(serialize_end:ZmqPBExampleRequest)
}

::google::protobuf::uint8* ZmqPBExampleRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ZmqPBExampleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string request_string = 1;
  if (this->request_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_string().data(), this->request_string().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ZmqPBExampleRequest.request_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_string(), target);
  }

  // int32 request_number = 2;
  if (this->request_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->request_number(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ZmqPBExampleRequest)
  return target;
}

size_t ZmqPBExampleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ZmqPBExampleRequest)
  size_t total_size = 0;

  // string request_string = 1;
  if (this->request_string().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_string());
  }

  // int32 request_number = 2;
  if (this->request_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->request_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZmqPBExampleRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ZmqPBExampleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ZmqPBExampleRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZmqPBExampleRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ZmqPBExampleRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ZmqPBExampleRequest)
    MergeFrom(*source);
  }
}

void ZmqPBExampleRequest::MergeFrom(const ZmqPBExampleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ZmqPBExampleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_string().size() > 0) {

    request_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_string_);
  }
  if (from.request_number() != 0) {
    set_request_number(from.request_number());
  }
}

void ZmqPBExampleRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ZmqPBExampleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZmqPBExampleRequest::CopyFrom(const ZmqPBExampleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ZmqPBExampleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZmqPBExampleRequest::IsInitialized() const {
  return true;
}

void ZmqPBExampleRequest::Swap(ZmqPBExampleRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZmqPBExampleRequest::InternalSwap(ZmqPBExampleRequest* other) {
  request_string_.Swap(&other->request_string_);
  std::swap(request_number_, other->request_number_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZmqPBExampleRequest::GetMetadata() const {
  protobuf_zmqpbexample_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zmqpbexample_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZmqPBExampleRequest

// string request_string = 1;
void ZmqPBExampleRequest::clear_request_string() {
  request_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ZmqPBExampleRequest::request_string() const {
  // @@protoc_insertion_point(field_get:ZmqPBExampleRequest.request_string)
  return request_string_.GetNoArena();
}
void ZmqPBExampleRequest::set_request_string(const ::std::string& value) {
  
  request_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ZmqPBExampleRequest.request_string)
}
#if LANG_CXX11
void ZmqPBExampleRequest::set_request_string(::std::string&& value) {
  
  request_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZmqPBExampleRequest.request_string)
}
#endif
void ZmqPBExampleRequest::set_request_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZmqPBExampleRequest.request_string)
}
void ZmqPBExampleRequest::set_request_string(const char* value, size_t size) {
  
  request_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZmqPBExampleRequest.request_string)
}
::std::string* ZmqPBExampleRequest::mutable_request_string() {
  
  // @@protoc_insertion_point(field_mutable:ZmqPBExampleRequest.request_string)
  return request_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ZmqPBExampleRequest::release_request_string() {
  // @@protoc_insertion_point(field_release:ZmqPBExampleRequest.request_string)
  
  return request_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ZmqPBExampleRequest::set_allocated_request_string(::std::string* request_string) {
  if (request_string != NULL) {
    
  } else {
    
  }
  request_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_string);
  // @@protoc_insertion_point(field_set_allocated:ZmqPBExampleRequest.request_string)
}

// int32 request_number = 2;
void ZmqPBExampleRequest::clear_request_number() {
  request_number_ = 0;
}
::google::protobuf::int32 ZmqPBExampleRequest::request_number() const {
  // @@protoc_insertion_point(field_get:ZmqPBExampleRequest.request_number)
  return request_number_;
}
void ZmqPBExampleRequest::set_request_number(::google::protobuf::int32 value) {
  
  request_number_ = value;
  // @@protoc_insertion_point(field_set:ZmqPBExampleRequest.request_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZmqPBExampleResponse::kResponseStringFieldNumber;
const int ZmqPBExampleResponse::kResponseNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZmqPBExampleResponse::ZmqPBExampleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zmqpbexample_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ZmqPBExampleResponse)
}
ZmqPBExampleResponse::ZmqPBExampleResponse(const ZmqPBExampleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  response_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.response_string().size() > 0) {
    response_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_string_);
  }
  response_number_ = from.response_number_;
  // @@protoc_insertion_point(copy_constructor:ZmqPBExampleResponse)
}

void ZmqPBExampleResponse::SharedCtor() {
  response_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_number_ = 0;
  _cached_size_ = 0;
}

ZmqPBExampleResponse::~ZmqPBExampleResponse() {
  // @@protoc_insertion_point(destructor:ZmqPBExampleResponse)
  SharedDtor();
}

void ZmqPBExampleResponse::SharedDtor() {
  response_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ZmqPBExampleResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZmqPBExampleResponse::descriptor() {
  protobuf_zmqpbexample_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zmqpbexample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ZmqPBExampleResponse& ZmqPBExampleResponse::default_instance() {
  protobuf_zmqpbexample_2eproto::InitDefaults();
  return *internal_default_instance();
}

ZmqPBExampleResponse* ZmqPBExampleResponse::New(::google::protobuf::Arena* arena) const {
  ZmqPBExampleResponse* n = new ZmqPBExampleResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZmqPBExampleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ZmqPBExampleResponse)
  response_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_number_ = 0;
}

bool ZmqPBExampleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ZmqPBExampleResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string response_string = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response_string().data(), this->response_string().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ZmqPBExampleResponse.response_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 response_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &response_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ZmqPBExampleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ZmqPBExampleResponse)
  return false;
#undef DO_
}

void ZmqPBExampleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ZmqPBExampleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string response_string = 1;
  if (this->response_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_string().data(), this->response_string().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ZmqPBExampleResponse.response_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->response_string(), output);
  }

  // int32 response_number = 2;
  if (this->response_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->response_number(), output);
  }

  // @@protoc_insertion_point(serialize_end:ZmqPBExampleResponse)
}

::google::protobuf::uint8* ZmqPBExampleResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ZmqPBExampleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string response_string = 1;
  if (this->response_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_string().data(), this->response_string().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ZmqPBExampleResponse.response_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->response_string(), target);
  }

  // int32 response_number = 2;
  if (this->response_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->response_number(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ZmqPBExampleResponse)
  return target;
}

size_t ZmqPBExampleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ZmqPBExampleResponse)
  size_t total_size = 0;

  // string response_string = 1;
  if (this->response_string().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response_string());
  }

  // int32 response_number = 2;
  if (this->response_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->response_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZmqPBExampleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ZmqPBExampleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ZmqPBExampleResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZmqPBExampleResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ZmqPBExampleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ZmqPBExampleResponse)
    MergeFrom(*source);
  }
}

void ZmqPBExampleResponse::MergeFrom(const ZmqPBExampleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ZmqPBExampleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.response_string().size() > 0) {

    response_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_string_);
  }
  if (from.response_number() != 0) {
    set_response_number(from.response_number());
  }
}

void ZmqPBExampleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ZmqPBExampleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZmqPBExampleResponse::CopyFrom(const ZmqPBExampleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ZmqPBExampleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZmqPBExampleResponse::IsInitialized() const {
  return true;
}

void ZmqPBExampleResponse::Swap(ZmqPBExampleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZmqPBExampleResponse::InternalSwap(ZmqPBExampleResponse* other) {
  response_string_.Swap(&other->response_string_);
  std::swap(response_number_, other->response_number_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZmqPBExampleResponse::GetMetadata() const {
  protobuf_zmqpbexample_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zmqpbexample_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZmqPBExampleResponse

// string response_string = 1;
void ZmqPBExampleResponse::clear_response_string() {
  response_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ZmqPBExampleResponse::response_string() const {
  // @@protoc_insertion_point(field_get:ZmqPBExampleResponse.response_string)
  return response_string_.GetNoArena();
}
void ZmqPBExampleResponse::set_response_string(const ::std::string& value) {
  
  response_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ZmqPBExampleResponse.response_string)
}
#if LANG_CXX11
void ZmqPBExampleResponse::set_response_string(::std::string&& value) {
  
  response_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZmqPBExampleResponse.response_string)
}
#endif
void ZmqPBExampleResponse::set_response_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  response_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZmqPBExampleResponse.response_string)
}
void ZmqPBExampleResponse::set_response_string(const char* value, size_t size) {
  
  response_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZmqPBExampleResponse.response_string)
}
::std::string* ZmqPBExampleResponse::mutable_response_string() {
  
  // @@protoc_insertion_point(field_mutable:ZmqPBExampleResponse.response_string)
  return response_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ZmqPBExampleResponse::release_response_string() {
  // @@protoc_insertion_point(field_release:ZmqPBExampleResponse.response_string)
  
  return response_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ZmqPBExampleResponse::set_allocated_response_string(::std::string* response_string) {
  if (response_string != NULL) {
    
  } else {
    
  }
  response_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_string);
  // @@protoc_insertion_point(field_set_allocated:ZmqPBExampleResponse.response_string)
}

// int32 response_number = 2;
void ZmqPBExampleResponse::clear_response_number() {
  response_number_ = 0;
}
::google::protobuf::int32 ZmqPBExampleResponse::response_number() const {
  // @@protoc_insertion_point(field_get:ZmqPBExampleResponse.response_number)
  return response_number_;
}
void ZmqPBExampleResponse::set_response_number(::google::protobuf::int32 value) {
  
  response_number_ = value;
  // @@protoc_insertion_point(field_set:ZmqPBExampleResponse.response_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZmqPBExampleRPCRequest::kServiceFieldNumber;
const int ZmqPBExampleRPCRequest::kMethodFieldNumber;
const int ZmqPBExampleRPCRequest::kProtobufFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZmqPBExampleRPCRequest::ZmqPBExampleRPCRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zmqpbexample_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ZmqPBExampleRPCRequest)
}
ZmqPBExampleRPCRequest::ZmqPBExampleRPCRequest(const ZmqPBExampleRPCRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service().size() > 0) {
    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.method().size() > 0) {
    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  protobuf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.protobuf().size() > 0) {
    protobuf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protobuf_);
  }
  // @@protoc_insertion_point(copy_constructor:ZmqPBExampleRPCRequest)
}

void ZmqPBExampleRPCRequest::SharedCtor() {
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protobuf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ZmqPBExampleRPCRequest::~ZmqPBExampleRPCRequest() {
  // @@protoc_insertion_point(destructor:ZmqPBExampleRPCRequest)
  SharedDtor();
}

void ZmqPBExampleRPCRequest::SharedDtor() {
  service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protobuf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ZmqPBExampleRPCRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZmqPBExampleRPCRequest::descriptor() {
  protobuf_zmqpbexample_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zmqpbexample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ZmqPBExampleRPCRequest& ZmqPBExampleRPCRequest::default_instance() {
  protobuf_zmqpbexample_2eproto::InitDefaults();
  return *internal_default_instance();
}

ZmqPBExampleRPCRequest* ZmqPBExampleRPCRequest::New(::google::protobuf::Arena* arena) const {
  ZmqPBExampleRPCRequest* n = new ZmqPBExampleRPCRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZmqPBExampleRPCRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ZmqPBExampleRPCRequest)
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protobuf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ZmqPBExampleRPCRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ZmqPBExampleRPCRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service().data(), this->service().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ZmqPBExampleRPCRequest.service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string method = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method().data(), this->method().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ZmqPBExampleRPCRequest.method"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes protobuf = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_protobuf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ZmqPBExampleRPCRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ZmqPBExampleRPCRequest)
  return false;
#undef DO_
}

void ZmqPBExampleRPCRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ZmqPBExampleRPCRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service = 1;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), this->service().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ZmqPBExampleRPCRequest.service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service(), output);
  }

  // string method = 2;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ZmqPBExampleRPCRequest.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->method(), output);
  }

  // bytes protobuf = 3;
  if (this->protobuf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->protobuf(), output);
  }

  // @@protoc_insertion_point(serialize_end:ZmqPBExampleRPCRequest)
}

::google::protobuf::uint8* ZmqPBExampleRPCRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ZmqPBExampleRPCRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service = 1;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), this->service().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ZmqPBExampleRPCRequest.service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service(), target);
  }

  // string method = 2;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ZmqPBExampleRPCRequest.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->method(), target);
  }

  // bytes protobuf = 3;
  if (this->protobuf().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->protobuf(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ZmqPBExampleRPCRequest)
  return target;
}

size_t ZmqPBExampleRPCRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ZmqPBExampleRPCRequest)
  size_t total_size = 0;

  // string service = 1;
  if (this->service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service());
  }

  // string method = 2;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }

  // bytes protobuf = 3;
  if (this->protobuf().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->protobuf());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZmqPBExampleRPCRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ZmqPBExampleRPCRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ZmqPBExampleRPCRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZmqPBExampleRPCRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ZmqPBExampleRPCRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ZmqPBExampleRPCRequest)
    MergeFrom(*source);
  }
}

void ZmqPBExampleRPCRequest::MergeFrom(const ZmqPBExampleRPCRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ZmqPBExampleRPCRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service().size() > 0) {

    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  if (from.method().size() > 0) {

    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.protobuf().size() > 0) {

    protobuf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protobuf_);
  }
}

void ZmqPBExampleRPCRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ZmqPBExampleRPCRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZmqPBExampleRPCRequest::CopyFrom(const ZmqPBExampleRPCRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ZmqPBExampleRPCRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZmqPBExampleRPCRequest::IsInitialized() const {
  return true;
}

void ZmqPBExampleRPCRequest::Swap(ZmqPBExampleRPCRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZmqPBExampleRPCRequest::InternalSwap(ZmqPBExampleRPCRequest* other) {
  service_.Swap(&other->service_);
  method_.Swap(&other->method_);
  protobuf_.Swap(&other->protobuf_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZmqPBExampleRPCRequest::GetMetadata() const {
  protobuf_zmqpbexample_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zmqpbexample_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZmqPBExampleRPCRequest

// string service = 1;
void ZmqPBExampleRPCRequest::clear_service() {
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ZmqPBExampleRPCRequest::service() const {
  // @@protoc_insertion_point(field_get:ZmqPBExampleRPCRequest.service)
  return service_.GetNoArena();
}
void ZmqPBExampleRPCRequest::set_service(const ::std::string& value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ZmqPBExampleRPCRequest.service)
}
#if LANG_CXX11
void ZmqPBExampleRPCRequest::set_service(::std::string&& value) {
  
  service_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZmqPBExampleRPCRequest.service)
}
#endif
void ZmqPBExampleRPCRequest::set_service(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZmqPBExampleRPCRequest.service)
}
void ZmqPBExampleRPCRequest::set_service(const char* value, size_t size) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZmqPBExampleRPCRequest.service)
}
::std::string* ZmqPBExampleRPCRequest::mutable_service() {
  
  // @@protoc_insertion_point(field_mutable:ZmqPBExampleRPCRequest.service)
  return service_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ZmqPBExampleRPCRequest::release_service() {
  // @@protoc_insertion_point(field_release:ZmqPBExampleRPCRequest.service)
  
  return service_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ZmqPBExampleRPCRequest::set_allocated_service(::std::string* service) {
  if (service != NULL) {
    
  } else {
    
  }
  service_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service);
  // @@protoc_insertion_point(field_set_allocated:ZmqPBExampleRPCRequest.service)
}

// string method = 2;
void ZmqPBExampleRPCRequest::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ZmqPBExampleRPCRequest::method() const {
  // @@protoc_insertion_point(field_get:ZmqPBExampleRPCRequest.method)
  return method_.GetNoArena();
}
void ZmqPBExampleRPCRequest::set_method(const ::std::string& value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ZmqPBExampleRPCRequest.method)
}
#if LANG_CXX11
void ZmqPBExampleRPCRequest::set_method(::std::string&& value) {
  
  method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZmqPBExampleRPCRequest.method)
}
#endif
void ZmqPBExampleRPCRequest::set_method(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZmqPBExampleRPCRequest.method)
}
void ZmqPBExampleRPCRequest::set_method(const char* value, size_t size) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZmqPBExampleRPCRequest.method)
}
::std::string* ZmqPBExampleRPCRequest::mutable_method() {
  
  // @@protoc_insertion_point(field_mutable:ZmqPBExampleRPCRequest.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ZmqPBExampleRPCRequest::release_method() {
  // @@protoc_insertion_point(field_release:ZmqPBExampleRPCRequest.method)
  
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ZmqPBExampleRPCRequest::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    
  } else {
    
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:ZmqPBExampleRPCRequest.method)
}

// bytes protobuf = 3;
void ZmqPBExampleRPCRequest::clear_protobuf() {
  protobuf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ZmqPBExampleRPCRequest::protobuf() const {
  // @@protoc_insertion_point(field_get:ZmqPBExampleRPCRequest.protobuf)
  return protobuf_.GetNoArena();
}
void ZmqPBExampleRPCRequest::set_protobuf(const ::std::string& value) {
  
  protobuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ZmqPBExampleRPCRequest.protobuf)
}
#if LANG_CXX11
void ZmqPBExampleRPCRequest::set_protobuf(::std::string&& value) {
  
  protobuf_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZmqPBExampleRPCRequest.protobuf)
}
#endif
void ZmqPBExampleRPCRequest::set_protobuf(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  protobuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZmqPBExampleRPCRequest.protobuf)
}
void ZmqPBExampleRPCRequest::set_protobuf(const void* value, size_t size) {
  
  protobuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZmqPBExampleRPCRequest.protobuf)
}
::std::string* ZmqPBExampleRPCRequest::mutable_protobuf() {
  
  // @@protoc_insertion_point(field_mutable:ZmqPBExampleRPCRequest.protobuf)
  return protobuf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ZmqPBExampleRPCRequest::release_protobuf() {
  // @@protoc_insertion_point(field_release:ZmqPBExampleRPCRequest.protobuf)
  
  return protobuf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ZmqPBExampleRPCRequest::set_allocated_protobuf(::std::string* protobuf) {
  if (protobuf != NULL) {
    
  } else {
    
  }
  protobuf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), protobuf);
  // @@protoc_insertion_point(field_set_allocated:ZmqPBExampleRPCRequest.protobuf)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZmqPBExampleRPCResponse::kProtobufFieldNumber;
const int ZmqPBExampleRPCResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZmqPBExampleRPCResponse::ZmqPBExampleRPCResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zmqpbexample_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ZmqPBExampleRPCResponse)
}
ZmqPBExampleRPCResponse::ZmqPBExampleRPCResponse(const ZmqPBExampleRPCResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  protobuf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.protobuf().size() > 0) {
    protobuf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protobuf_);
  }
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  // @@protoc_insertion_point(copy_constructor:ZmqPBExampleRPCResponse)
}

void ZmqPBExampleRPCResponse::SharedCtor() {
  protobuf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ZmqPBExampleRPCResponse::~ZmqPBExampleRPCResponse() {
  // @@protoc_insertion_point(destructor:ZmqPBExampleRPCResponse)
  SharedDtor();
}

void ZmqPBExampleRPCResponse::SharedDtor() {
  protobuf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ZmqPBExampleRPCResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZmqPBExampleRPCResponse::descriptor() {
  protobuf_zmqpbexample_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zmqpbexample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ZmqPBExampleRPCResponse& ZmqPBExampleRPCResponse::default_instance() {
  protobuf_zmqpbexample_2eproto::InitDefaults();
  return *internal_default_instance();
}

ZmqPBExampleRPCResponse* ZmqPBExampleRPCResponse::New(::google::protobuf::Arena* arena) const {
  ZmqPBExampleRPCResponse* n = new ZmqPBExampleRPCResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZmqPBExampleRPCResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ZmqPBExampleRPCResponse)
  protobuf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ZmqPBExampleRPCResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ZmqPBExampleRPCResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes protobuf = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_protobuf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ZmqPBExampleRPCResponse.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ZmqPBExampleRPCResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ZmqPBExampleRPCResponse)
  return false;
#undef DO_
}

void ZmqPBExampleRPCResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ZmqPBExampleRPCResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes protobuf = 1;
  if (this->protobuf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->protobuf(), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ZmqPBExampleRPCResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  // @@protoc_insertion_point(serialize_end:ZmqPBExampleRPCResponse)
}

::google::protobuf::uint8* ZmqPBExampleRPCResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ZmqPBExampleRPCResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes protobuf = 1;
  if (this->protobuf().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->protobuf(), target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ZmqPBExampleRPCResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ZmqPBExampleRPCResponse)
  return target;
}

size_t ZmqPBExampleRPCResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ZmqPBExampleRPCResponse)
  size_t total_size = 0;

  // bytes protobuf = 1;
  if (this->protobuf().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->protobuf());
  }

  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZmqPBExampleRPCResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ZmqPBExampleRPCResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ZmqPBExampleRPCResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZmqPBExampleRPCResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ZmqPBExampleRPCResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ZmqPBExampleRPCResponse)
    MergeFrom(*source);
  }
}

void ZmqPBExampleRPCResponse::MergeFrom(const ZmqPBExampleRPCResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ZmqPBExampleRPCResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.protobuf().size() > 0) {

    protobuf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protobuf_);
  }
  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
}

void ZmqPBExampleRPCResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ZmqPBExampleRPCResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZmqPBExampleRPCResponse::CopyFrom(const ZmqPBExampleRPCResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ZmqPBExampleRPCResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZmqPBExampleRPCResponse::IsInitialized() const {
  return true;
}

void ZmqPBExampleRPCResponse::Swap(ZmqPBExampleRPCResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZmqPBExampleRPCResponse::InternalSwap(ZmqPBExampleRPCResponse* other) {
  protobuf_.Swap(&other->protobuf_);
  error_.Swap(&other->error_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZmqPBExampleRPCResponse::GetMetadata() const {
  protobuf_zmqpbexample_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zmqpbexample_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZmqPBExampleRPCResponse

// bytes protobuf = 1;
void ZmqPBExampleRPCResponse::clear_protobuf() {
  protobuf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ZmqPBExampleRPCResponse::protobuf() const {
  // @@protoc_insertion_point(field_get:ZmqPBExampleRPCResponse.protobuf)
  return protobuf_.GetNoArena();
}
void ZmqPBExampleRPCResponse::set_protobuf(const ::std::string& value) {
  
  protobuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ZmqPBExampleRPCResponse.protobuf)
}
#if LANG_CXX11
void ZmqPBExampleRPCResponse::set_protobuf(::std::string&& value) {
  
  protobuf_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZmqPBExampleRPCResponse.protobuf)
}
#endif
void ZmqPBExampleRPCResponse::set_protobuf(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  protobuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZmqPBExampleRPCResponse.protobuf)
}
void ZmqPBExampleRPCResponse::set_protobuf(const void* value, size_t size) {
  
  protobuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZmqPBExampleRPCResponse.protobuf)
}
::std::string* ZmqPBExampleRPCResponse::mutable_protobuf() {
  
  // @@protoc_insertion_point(field_mutable:ZmqPBExampleRPCResponse.protobuf)
  return protobuf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ZmqPBExampleRPCResponse::release_protobuf() {
  // @@protoc_insertion_point(field_release:ZmqPBExampleRPCResponse.protobuf)
  
  return protobuf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ZmqPBExampleRPCResponse::set_allocated_protobuf(::std::string* protobuf) {
  if (protobuf != NULL) {
    
  } else {
    
  }
  protobuf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), protobuf);
  // @@protoc_insertion_point(field_set_allocated:ZmqPBExampleRPCResponse.protobuf)
}

// string error = 2;
void ZmqPBExampleRPCResponse::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ZmqPBExampleRPCResponse::error() const {
  // @@protoc_insertion_point(field_get:ZmqPBExampleRPCResponse.error)
  return error_.GetNoArena();
}
void ZmqPBExampleRPCResponse::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ZmqPBExampleRPCResponse.error)
}
#if LANG_CXX11
void ZmqPBExampleRPCResponse::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZmqPBExampleRPCResponse.error)
}
#endif
void ZmqPBExampleRPCResponse::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZmqPBExampleRPCResponse.error)
}
void ZmqPBExampleRPCResponse::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZmqPBExampleRPCResponse.error)
}
::std::string* ZmqPBExampleRPCResponse::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:ZmqPBExampleRPCResponse.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ZmqPBExampleRPCResponse::release_error() {
  // @@protoc_insertion_point(field_release:ZmqPBExampleRPCResponse.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ZmqPBExampleRPCResponse::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:ZmqPBExampleRPCResponse.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RPCAddRequest::kTerm1FieldNumber;
const int RPCAddRequest::kTerm2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RPCAddRequest::RPCAddRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zmqpbexample_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RPCAddRequest)
}
RPCAddRequest::RPCAddRequest(const RPCAddRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&term1_, &from.term1_,
    reinterpret_cast<char*>(&term2_) -
    reinterpret_cast<char*>(&term1_) + sizeof(term2_));
  // @@protoc_insertion_point(copy_constructor:RPCAddRequest)
}

void RPCAddRequest::SharedCtor() {
  ::memset(&term1_, 0, reinterpret_cast<char*>(&term2_) -
    reinterpret_cast<char*>(&term1_) + sizeof(term2_));
  _cached_size_ = 0;
}

RPCAddRequest::~RPCAddRequest() {
  // @@protoc_insertion_point(destructor:RPCAddRequest)
  SharedDtor();
}

void RPCAddRequest::SharedDtor() {
}

void RPCAddRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RPCAddRequest::descriptor() {
  protobuf_zmqpbexample_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zmqpbexample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RPCAddRequest& RPCAddRequest::default_instance() {
  protobuf_zmqpbexample_2eproto::InitDefaults();
  return *internal_default_instance();
}

RPCAddRequest* RPCAddRequest::New(::google::protobuf::Arena* arena) const {
  RPCAddRequest* n = new RPCAddRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RPCAddRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RPCAddRequest)
  ::memset(&term1_, 0, reinterpret_cast<char*>(&term2_) -
    reinterpret_cast<char*>(&term1_) + sizeof(term2_));
}

bool RPCAddRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RPCAddRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 term1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &term1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 term2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &term2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RPCAddRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RPCAddRequest)
  return false;
#undef DO_
}

void RPCAddRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RPCAddRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 term1 = 1;
  if (this->term1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->term1(), output);
  }

  // uint32 term2 = 2;
  if (this->term2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->term2(), output);
  }

  // @@protoc_insertion_point(serialize_end:RPCAddRequest)
}

::google::protobuf::uint8* RPCAddRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RPCAddRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 term1 = 1;
  if (this->term1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->term1(), target);
  }

  // uint32 term2 = 2;
  if (this->term2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->term2(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RPCAddRequest)
  return target;
}

size_t RPCAddRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RPCAddRequest)
  size_t total_size = 0;

  // uint32 term1 = 1;
  if (this->term1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->term1());
  }

  // uint32 term2 = 2;
  if (this->term2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->term2());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RPCAddRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RPCAddRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RPCAddRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RPCAddRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RPCAddRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RPCAddRequest)
    MergeFrom(*source);
  }
}

void RPCAddRequest::MergeFrom(const RPCAddRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RPCAddRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.term1() != 0) {
    set_term1(from.term1());
  }
  if (from.term2() != 0) {
    set_term2(from.term2());
  }
}

void RPCAddRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RPCAddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RPCAddRequest::CopyFrom(const RPCAddRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RPCAddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RPCAddRequest::IsInitialized() const {
  return true;
}

void RPCAddRequest::Swap(RPCAddRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RPCAddRequest::InternalSwap(RPCAddRequest* other) {
  std::swap(term1_, other->term1_);
  std::swap(term2_, other->term2_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RPCAddRequest::GetMetadata() const {
  protobuf_zmqpbexample_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zmqpbexample_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RPCAddRequest

// uint32 term1 = 1;
void RPCAddRequest::clear_term1() {
  term1_ = 0u;
}
::google::protobuf::uint32 RPCAddRequest::term1() const {
  // @@protoc_insertion_point(field_get:RPCAddRequest.term1)
  return term1_;
}
void RPCAddRequest::set_term1(::google::protobuf::uint32 value) {
  
  term1_ = value;
  // @@protoc_insertion_point(field_set:RPCAddRequest.term1)
}

// uint32 term2 = 2;
void RPCAddRequest::clear_term2() {
  term2_ = 0u;
}
::google::protobuf::uint32 RPCAddRequest::term2() const {
  // @@protoc_insertion_point(field_get:RPCAddRequest.term2)
  return term2_;
}
void RPCAddRequest::set_term2(::google::protobuf::uint32 value) {
  
  term2_ = value;
  // @@protoc_insertion_point(field_set:RPCAddRequest.term2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RPCAddResponse::kSumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RPCAddResponse::RPCAddResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zmqpbexample_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RPCAddResponse)
}
RPCAddResponse::RPCAddResponse(const RPCAddResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sum_ = from.sum_;
  // @@protoc_insertion_point(copy_constructor:RPCAddResponse)
}

void RPCAddResponse::SharedCtor() {
  sum_ = 0u;
  _cached_size_ = 0;
}

RPCAddResponse::~RPCAddResponse() {
  // @@protoc_insertion_point(destructor:RPCAddResponse)
  SharedDtor();
}

void RPCAddResponse::SharedDtor() {
}

void RPCAddResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RPCAddResponse::descriptor() {
  protobuf_zmqpbexample_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zmqpbexample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RPCAddResponse& RPCAddResponse::default_instance() {
  protobuf_zmqpbexample_2eproto::InitDefaults();
  return *internal_default_instance();
}

RPCAddResponse* RPCAddResponse::New(::google::protobuf::Arena* arena) const {
  RPCAddResponse* n = new RPCAddResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RPCAddResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RPCAddResponse)
  sum_ = 0u;
}

bool RPCAddResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RPCAddResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 sum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RPCAddResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RPCAddResponse)
  return false;
#undef DO_
}

void RPCAddResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RPCAddResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 sum = 1;
  if (this->sum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sum(), output);
  }

  // @@protoc_insertion_point(serialize_end:RPCAddResponse)
}

::google::protobuf::uint8* RPCAddResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RPCAddResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 sum = 1;
  if (this->sum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sum(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RPCAddResponse)
  return target;
}

size_t RPCAddResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RPCAddResponse)
  size_t total_size = 0;

  // uint32 sum = 1;
  if (this->sum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RPCAddResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RPCAddResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RPCAddResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RPCAddResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RPCAddResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RPCAddResponse)
    MergeFrom(*source);
  }
}

void RPCAddResponse::MergeFrom(const RPCAddResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RPCAddResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sum() != 0) {
    set_sum(from.sum());
  }
}

void RPCAddResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RPCAddResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RPCAddResponse::CopyFrom(const RPCAddResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RPCAddResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RPCAddResponse::IsInitialized() const {
  return true;
}

void RPCAddResponse::Swap(RPCAddResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RPCAddResponse::InternalSwap(RPCAddResponse* other) {
  std::swap(sum_, other->sum_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RPCAddResponse::GetMetadata() const {
  protobuf_zmqpbexample_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zmqpbexample_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RPCAddResponse

// uint32 sum = 1;
void RPCAddResponse::clear_sum() {
  sum_ = 0u;
}
::google::protobuf::uint32 RPCAddResponse::sum() const {
  // @@protoc_insertion_point(field_get:RPCAddResponse.sum)
  return sum_;
}
void RPCAddResponse::set_sum(::google::protobuf::uint32 value) {
  
  sum_ = value;
  // @@protoc_insertion_point(field_set:RPCAddResponse.sum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RPCReverseRequest::kToReverseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RPCReverseRequest::RPCReverseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zmqpbexample_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RPCReverseRequest)
}
RPCReverseRequest::RPCReverseRequest(const RPCReverseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  to_reverse_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_reverse().size() > 0) {
    to_reverse_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_reverse_);
  }
  // @@protoc_insertion_point(copy_constructor:RPCReverseRequest)
}

void RPCReverseRequest::SharedCtor() {
  to_reverse_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RPCReverseRequest::~RPCReverseRequest() {
  // @@protoc_insertion_point(destructor:RPCReverseRequest)
  SharedDtor();
}

void RPCReverseRequest::SharedDtor() {
  to_reverse_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RPCReverseRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RPCReverseRequest::descriptor() {
  protobuf_zmqpbexample_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zmqpbexample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RPCReverseRequest& RPCReverseRequest::default_instance() {
  protobuf_zmqpbexample_2eproto::InitDefaults();
  return *internal_default_instance();
}

RPCReverseRequest* RPCReverseRequest::New(::google::protobuf::Arena* arena) const {
  RPCReverseRequest* n = new RPCReverseRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RPCReverseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RPCReverseRequest)
  to_reverse_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RPCReverseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RPCReverseRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string to_reverse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to_reverse()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to_reverse().data(), this->to_reverse().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RPCReverseRequest.to_reverse"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RPCReverseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RPCReverseRequest)
  return false;
#undef DO_
}

void RPCReverseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RPCReverseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string to_reverse = 1;
  if (this->to_reverse().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_reverse().data(), this->to_reverse().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RPCReverseRequest.to_reverse");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->to_reverse(), output);
  }

  // @@protoc_insertion_point(serialize_end:RPCReverseRequest)
}

::google::protobuf::uint8* RPCReverseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RPCReverseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string to_reverse = 1;
  if (this->to_reverse().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to_reverse().data(), this->to_reverse().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RPCReverseRequest.to_reverse");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->to_reverse(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RPCReverseRequest)
  return target;
}

size_t RPCReverseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RPCReverseRequest)
  size_t total_size = 0;

  // string to_reverse = 1;
  if (this->to_reverse().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to_reverse());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RPCReverseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RPCReverseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RPCReverseRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RPCReverseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RPCReverseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RPCReverseRequest)
    MergeFrom(*source);
  }
}

void RPCReverseRequest::MergeFrom(const RPCReverseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RPCReverseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.to_reverse().size() > 0) {

    to_reverse_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_reverse_);
  }
}

void RPCReverseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RPCReverseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RPCReverseRequest::CopyFrom(const RPCReverseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RPCReverseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RPCReverseRequest::IsInitialized() const {
  return true;
}

void RPCReverseRequest::Swap(RPCReverseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RPCReverseRequest::InternalSwap(RPCReverseRequest* other) {
  to_reverse_.Swap(&other->to_reverse_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RPCReverseRequest::GetMetadata() const {
  protobuf_zmqpbexample_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zmqpbexample_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RPCReverseRequest

// string to_reverse = 1;
void RPCReverseRequest::clear_to_reverse() {
  to_reverse_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RPCReverseRequest::to_reverse() const {
  // @@protoc_insertion_point(field_get:RPCReverseRequest.to_reverse)
  return to_reverse_.GetNoArena();
}
void RPCReverseRequest::set_to_reverse(const ::std::string& value) {
  
  to_reverse_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RPCReverseRequest.to_reverse)
}
#if LANG_CXX11
void RPCReverseRequest::set_to_reverse(::std::string&& value) {
  
  to_reverse_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RPCReverseRequest.to_reverse)
}
#endif
void RPCReverseRequest::set_to_reverse(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  to_reverse_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RPCReverseRequest.to_reverse)
}
void RPCReverseRequest::set_to_reverse(const char* value, size_t size) {
  
  to_reverse_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RPCReverseRequest.to_reverse)
}
::std::string* RPCReverseRequest::mutable_to_reverse() {
  
  // @@protoc_insertion_point(field_mutable:RPCReverseRequest.to_reverse)
  return to_reverse_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RPCReverseRequest::release_to_reverse() {
  // @@protoc_insertion_point(field_release:RPCReverseRequest.to_reverse)
  
  return to_reverse_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RPCReverseRequest::set_allocated_to_reverse(::std::string* to_reverse) {
  if (to_reverse != NULL) {
    
  } else {
    
  }
  to_reverse_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_reverse);
  // @@protoc_insertion_point(field_set_allocated:RPCReverseRequest.to_reverse)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RPCReverseResponse::kReversedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RPCReverseResponse::RPCReverseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zmqpbexample_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RPCReverseResponse)
}
RPCReverseResponse::RPCReverseResponse(const RPCReverseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reversed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reversed().size() > 0) {
    reversed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reversed_);
  }
  // @@protoc_insertion_point(copy_constructor:RPCReverseResponse)
}

void RPCReverseResponse::SharedCtor() {
  reversed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RPCReverseResponse::~RPCReverseResponse() {
  // @@protoc_insertion_point(destructor:RPCReverseResponse)
  SharedDtor();
}

void RPCReverseResponse::SharedDtor() {
  reversed_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RPCReverseResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RPCReverseResponse::descriptor() {
  protobuf_zmqpbexample_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zmqpbexample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RPCReverseResponse& RPCReverseResponse::default_instance() {
  protobuf_zmqpbexample_2eproto::InitDefaults();
  return *internal_default_instance();
}

RPCReverseResponse* RPCReverseResponse::New(::google::protobuf::Arena* arena) const {
  RPCReverseResponse* n = new RPCReverseResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RPCReverseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RPCReverseResponse)
  reversed_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RPCReverseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RPCReverseResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string reversed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reversed()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reversed().data(), this->reversed().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RPCReverseResponse.reversed"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RPCReverseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RPCReverseResponse)
  return false;
#undef DO_
}

void RPCReverseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RPCReverseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reversed = 1;
  if (this->reversed().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reversed().data(), this->reversed().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RPCReverseResponse.reversed");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->reversed(), output);
  }

  // @@protoc_insertion_point(serialize_end:RPCReverseResponse)
}

::google::protobuf::uint8* RPCReverseResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RPCReverseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reversed = 1;
  if (this->reversed().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reversed().data(), this->reversed().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RPCReverseResponse.reversed");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->reversed(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RPCReverseResponse)
  return target;
}

size_t RPCReverseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RPCReverseResponse)
  size_t total_size = 0;

  // string reversed = 1;
  if (this->reversed().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reversed());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RPCReverseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RPCReverseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RPCReverseResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RPCReverseResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RPCReverseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RPCReverseResponse)
    MergeFrom(*source);
  }
}

void RPCReverseResponse::MergeFrom(const RPCReverseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RPCReverseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reversed().size() > 0) {

    reversed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reversed_);
  }
}

void RPCReverseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RPCReverseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RPCReverseResponse::CopyFrom(const RPCReverseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RPCReverseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RPCReverseResponse::IsInitialized() const {
  return true;
}

void RPCReverseResponse::Swap(RPCReverseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RPCReverseResponse::InternalSwap(RPCReverseResponse* other) {
  reversed_.Swap(&other->reversed_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RPCReverseResponse::GetMetadata() const {
  protobuf_zmqpbexample_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zmqpbexample_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RPCReverseResponse

// string reversed = 1;
void RPCReverseResponse::clear_reversed() {
  reversed_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RPCReverseResponse::reversed() const {
  // @@protoc_insertion_point(field_get:RPCReverseResponse.reversed)
  return reversed_.GetNoArena();
}
void RPCReverseResponse::set_reversed(const ::std::string& value) {
  
  reversed_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RPCReverseResponse.reversed)
}
#if LANG_CXX11
void RPCReverseResponse::set_reversed(::std::string&& value) {
  
  reversed_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RPCReverseResponse.reversed)
}
#endif
void RPCReverseResponse::set_reversed(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reversed_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RPCReverseResponse.reversed)
}
void RPCReverseResponse::set_reversed(const char* value, size_t size) {
  
  reversed_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RPCReverseResponse.reversed)
}
::std::string* RPCReverseResponse::mutable_reversed() {
  
  // @@protoc_insertion_point(field_mutable:RPCReverseResponse.reversed)
  return reversed_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RPCReverseResponse::release_reversed() {
  // @@protoc_insertion_point(field_release:RPCReverseResponse.reversed)
  
  return reversed_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RPCReverseResponse::set_allocated_reversed(::std::string* reversed) {
  if (reversed != NULL) {
    
  } else {
    
  }
  reversed_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reversed);
  // @@protoc_insertion_point(field_set_allocated:RPCReverseResponse.reversed)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZmqPBExampleWeather::kZipcodeFieldNumber;
const int ZmqPBExampleWeather::kTemperatureFieldNumber;
const int ZmqPBExampleWeather::kRelhumidityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZmqPBExampleWeather::ZmqPBExampleWeather()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zmqpbexample_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ZmqPBExampleWeather)
}
ZmqPBExampleWeather::ZmqPBExampleWeather(const ZmqPBExampleWeather& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&zipcode_, &from.zipcode_,
    reinterpret_cast<char*>(&relhumidity_) -
    reinterpret_cast<char*>(&zipcode_) + sizeof(relhumidity_));
  // @@protoc_insertion_point(copy_constructor:ZmqPBExampleWeather)
}

void ZmqPBExampleWeather::SharedCtor() {
  ::memset(&zipcode_, 0, reinterpret_cast<char*>(&relhumidity_) -
    reinterpret_cast<char*>(&zipcode_) + sizeof(relhumidity_));
  _cached_size_ = 0;
}

ZmqPBExampleWeather::~ZmqPBExampleWeather() {
  // @@protoc_insertion_point(destructor:ZmqPBExampleWeather)
  SharedDtor();
}

void ZmqPBExampleWeather::SharedDtor() {
}

void ZmqPBExampleWeather::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZmqPBExampleWeather::descriptor() {
  protobuf_zmqpbexample_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zmqpbexample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ZmqPBExampleWeather& ZmqPBExampleWeather::default_instance() {
  protobuf_zmqpbexample_2eproto::InitDefaults();
  return *internal_default_instance();
}

ZmqPBExampleWeather* ZmqPBExampleWeather::New(::google::protobuf::Arena* arena) const {
  ZmqPBExampleWeather* n = new ZmqPBExampleWeather;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZmqPBExampleWeather::Clear() {
// @@protoc_insertion_point(message_clear_start:ZmqPBExampleWeather)
  ::memset(&zipcode_, 0, reinterpret_cast<char*>(&relhumidity_) -
    reinterpret_cast<char*>(&zipcode_) + sizeof(relhumidity_));
}

bool ZmqPBExampleWeather::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ZmqPBExampleWeather)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 zipcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zipcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 temperature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &temperature_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 relhumidity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &relhumidity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ZmqPBExampleWeather)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ZmqPBExampleWeather)
  return false;
#undef DO_
}

void ZmqPBExampleWeather::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ZmqPBExampleWeather)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 zipcode = 1;
  if (this->zipcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->zipcode(), output);
  }

  // uint32 temperature = 2;
  if (this->temperature() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->temperature(), output);
  }

  // uint32 relhumidity = 3;
  if (this->relhumidity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->relhumidity(), output);
  }

  // @@protoc_insertion_point(serialize_end:ZmqPBExampleWeather)
}

::google::protobuf::uint8* ZmqPBExampleWeather::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ZmqPBExampleWeather)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 zipcode = 1;
  if (this->zipcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->zipcode(), target);
  }

  // uint32 temperature = 2;
  if (this->temperature() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->temperature(), target);
  }

  // uint32 relhumidity = 3;
  if (this->relhumidity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->relhumidity(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ZmqPBExampleWeather)
  return target;
}

size_t ZmqPBExampleWeather::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ZmqPBExampleWeather)
  size_t total_size = 0;

  // uint32 zipcode = 1;
  if (this->zipcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zipcode());
  }

  // uint32 temperature = 2;
  if (this->temperature() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->temperature());
  }

  // uint32 relhumidity = 3;
  if (this->relhumidity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->relhumidity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZmqPBExampleWeather::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ZmqPBExampleWeather)
  GOOGLE_DCHECK_NE(&from, this);
  const ZmqPBExampleWeather* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZmqPBExampleWeather>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ZmqPBExampleWeather)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ZmqPBExampleWeather)
    MergeFrom(*source);
  }
}

void ZmqPBExampleWeather::MergeFrom(const ZmqPBExampleWeather& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ZmqPBExampleWeather)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.zipcode() != 0) {
    set_zipcode(from.zipcode());
  }
  if (from.temperature() != 0) {
    set_temperature(from.temperature());
  }
  if (from.relhumidity() != 0) {
    set_relhumidity(from.relhumidity());
  }
}

void ZmqPBExampleWeather::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ZmqPBExampleWeather)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZmqPBExampleWeather::CopyFrom(const ZmqPBExampleWeather& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ZmqPBExampleWeather)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZmqPBExampleWeather::IsInitialized() const {
  return true;
}

void ZmqPBExampleWeather::Swap(ZmqPBExampleWeather* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZmqPBExampleWeather::InternalSwap(ZmqPBExampleWeather* other) {
  std::swap(zipcode_, other->zipcode_);
  std::swap(temperature_, other->temperature_);
  std::swap(relhumidity_, other->relhumidity_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZmqPBExampleWeather::GetMetadata() const {
  protobuf_zmqpbexample_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zmqpbexample_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZmqPBExampleWeather

// uint32 zipcode = 1;
void ZmqPBExampleWeather::clear_zipcode() {
  zipcode_ = 0u;
}
::google::protobuf::uint32 ZmqPBExampleWeather::zipcode() const {
  // @@protoc_insertion_point(field_get:ZmqPBExampleWeather.zipcode)
  return zipcode_;
}
void ZmqPBExampleWeather::set_zipcode(::google::protobuf::uint32 value) {
  
  zipcode_ = value;
  // @@protoc_insertion_point(field_set:ZmqPBExampleWeather.zipcode)
}

// uint32 temperature = 2;
void ZmqPBExampleWeather::clear_temperature() {
  temperature_ = 0u;
}
::google::protobuf::uint32 ZmqPBExampleWeather::temperature() const {
  // @@protoc_insertion_point(field_get:ZmqPBExampleWeather.temperature)
  return temperature_;
}
void ZmqPBExampleWeather::set_temperature(::google::protobuf::uint32 value) {
  
  temperature_ = value;
  // @@protoc_insertion_point(field_set:ZmqPBExampleWeather.temperature)
}

// uint32 relhumidity = 3;
void ZmqPBExampleWeather::clear_relhumidity() {
  relhumidity_ = 0u;
}
::google::protobuf::uint32 ZmqPBExampleWeather::relhumidity() const {
  // @@protoc_insertion_point(field_get:ZmqPBExampleWeather.relhumidity)
  return relhumidity_;
}
void ZmqPBExampleWeather::set_relhumidity(::google::protobuf::uint32 value) {
  
  relhumidity_ = value;
  // @@protoc_insertion_point(field_set:ZmqPBExampleWeather.relhumidity)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZmqPBExampleWorkerRequest::kStringInFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZmqPBExampleWorkerRequest::ZmqPBExampleWorkerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zmqpbexample_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ZmqPBExampleWorkerRequest)
}
ZmqPBExampleWorkerRequest::ZmqPBExampleWorkerRequest(const ZmqPBExampleWorkerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  string_in_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.string_in().size() > 0) {
    string_in_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_in_);
  }
  // @@protoc_insertion_point(copy_constructor:ZmqPBExampleWorkerRequest)
}

void ZmqPBExampleWorkerRequest::SharedCtor() {
  string_in_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ZmqPBExampleWorkerRequest::~ZmqPBExampleWorkerRequest() {
  // @@protoc_insertion_point(destructor:ZmqPBExampleWorkerRequest)
  SharedDtor();
}

void ZmqPBExampleWorkerRequest::SharedDtor() {
  string_in_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ZmqPBExampleWorkerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZmqPBExampleWorkerRequest::descriptor() {
  protobuf_zmqpbexample_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zmqpbexample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ZmqPBExampleWorkerRequest& ZmqPBExampleWorkerRequest::default_instance() {
  protobuf_zmqpbexample_2eproto::InitDefaults();
  return *internal_default_instance();
}

ZmqPBExampleWorkerRequest* ZmqPBExampleWorkerRequest::New(::google::protobuf::Arena* arena) const {
  ZmqPBExampleWorkerRequest* n = new ZmqPBExampleWorkerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZmqPBExampleWorkerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ZmqPBExampleWorkerRequest)
  string_in_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ZmqPBExampleWorkerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ZmqPBExampleWorkerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string string_in = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_in()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_in().data(), this->string_in().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ZmqPBExampleWorkerRequest.string_in"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ZmqPBExampleWorkerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ZmqPBExampleWorkerRequest)
  return false;
#undef DO_
}

void ZmqPBExampleWorkerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ZmqPBExampleWorkerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string string_in = 1;
  if (this->string_in().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_in().data(), this->string_in().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ZmqPBExampleWorkerRequest.string_in");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->string_in(), output);
  }

  // @@protoc_insertion_point(serialize_end:ZmqPBExampleWorkerRequest)
}

::google::protobuf::uint8* ZmqPBExampleWorkerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ZmqPBExampleWorkerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string string_in = 1;
  if (this->string_in().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_in().data(), this->string_in().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ZmqPBExampleWorkerRequest.string_in");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->string_in(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ZmqPBExampleWorkerRequest)
  return target;
}

size_t ZmqPBExampleWorkerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ZmqPBExampleWorkerRequest)
  size_t total_size = 0;

  // string string_in = 1;
  if (this->string_in().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->string_in());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZmqPBExampleWorkerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ZmqPBExampleWorkerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ZmqPBExampleWorkerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZmqPBExampleWorkerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ZmqPBExampleWorkerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ZmqPBExampleWorkerRequest)
    MergeFrom(*source);
  }
}

void ZmqPBExampleWorkerRequest::MergeFrom(const ZmqPBExampleWorkerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ZmqPBExampleWorkerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.string_in().size() > 0) {

    string_in_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_in_);
  }
}

void ZmqPBExampleWorkerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ZmqPBExampleWorkerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZmqPBExampleWorkerRequest::CopyFrom(const ZmqPBExampleWorkerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ZmqPBExampleWorkerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZmqPBExampleWorkerRequest::IsInitialized() const {
  return true;
}

void ZmqPBExampleWorkerRequest::Swap(ZmqPBExampleWorkerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZmqPBExampleWorkerRequest::InternalSwap(ZmqPBExampleWorkerRequest* other) {
  string_in_.Swap(&other->string_in_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZmqPBExampleWorkerRequest::GetMetadata() const {
  protobuf_zmqpbexample_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zmqpbexample_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZmqPBExampleWorkerRequest

// string string_in = 1;
void ZmqPBExampleWorkerRequest::clear_string_in() {
  string_in_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ZmqPBExampleWorkerRequest::string_in() const {
  // @@protoc_insertion_point(field_get:ZmqPBExampleWorkerRequest.string_in)
  return string_in_.GetNoArena();
}
void ZmqPBExampleWorkerRequest::set_string_in(const ::std::string& value) {
  
  string_in_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ZmqPBExampleWorkerRequest.string_in)
}
#if LANG_CXX11
void ZmqPBExampleWorkerRequest::set_string_in(::std::string&& value) {
  
  string_in_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZmqPBExampleWorkerRequest.string_in)
}
#endif
void ZmqPBExampleWorkerRequest::set_string_in(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  string_in_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZmqPBExampleWorkerRequest.string_in)
}
void ZmqPBExampleWorkerRequest::set_string_in(const char* value, size_t size) {
  
  string_in_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZmqPBExampleWorkerRequest.string_in)
}
::std::string* ZmqPBExampleWorkerRequest::mutable_string_in() {
  
  // @@protoc_insertion_point(field_mutable:ZmqPBExampleWorkerRequest.string_in)
  return string_in_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ZmqPBExampleWorkerRequest::release_string_in() {
  // @@protoc_insertion_point(field_release:ZmqPBExampleWorkerRequest.string_in)
  
  return string_in_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ZmqPBExampleWorkerRequest::set_allocated_string_in(::std::string* string_in) {
  if (string_in != NULL) {
    
  } else {
    
  }
  string_in_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_in);
  // @@protoc_insertion_point(field_set_allocated:ZmqPBExampleWorkerRequest.string_in)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZmqPBExampleWorkerResponse::kStringOutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZmqPBExampleWorkerResponse::ZmqPBExampleWorkerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_zmqpbexample_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ZmqPBExampleWorkerResponse)
}
ZmqPBExampleWorkerResponse::ZmqPBExampleWorkerResponse(const ZmqPBExampleWorkerResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  string_out_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.string_out().size() > 0) {
    string_out_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_out_);
  }
  // @@protoc_insertion_point(copy_constructor:ZmqPBExampleWorkerResponse)
}

void ZmqPBExampleWorkerResponse::SharedCtor() {
  string_out_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ZmqPBExampleWorkerResponse::~ZmqPBExampleWorkerResponse() {
  // @@protoc_insertion_point(destructor:ZmqPBExampleWorkerResponse)
  SharedDtor();
}

void ZmqPBExampleWorkerResponse::SharedDtor() {
  string_out_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ZmqPBExampleWorkerResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZmqPBExampleWorkerResponse::descriptor() {
  protobuf_zmqpbexample_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zmqpbexample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ZmqPBExampleWorkerResponse& ZmqPBExampleWorkerResponse::default_instance() {
  protobuf_zmqpbexample_2eproto::InitDefaults();
  return *internal_default_instance();
}

ZmqPBExampleWorkerResponse* ZmqPBExampleWorkerResponse::New(::google::protobuf::Arena* arena) const {
  ZmqPBExampleWorkerResponse* n = new ZmqPBExampleWorkerResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZmqPBExampleWorkerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ZmqPBExampleWorkerResponse)
  string_out_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ZmqPBExampleWorkerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ZmqPBExampleWorkerResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string string_out = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_out()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_out().data(), this->string_out().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ZmqPBExampleWorkerResponse.string_out"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ZmqPBExampleWorkerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ZmqPBExampleWorkerResponse)
  return false;
#undef DO_
}

void ZmqPBExampleWorkerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ZmqPBExampleWorkerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string string_out = 1;
  if (this->string_out().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_out().data(), this->string_out().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ZmqPBExampleWorkerResponse.string_out");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->string_out(), output);
  }

  // @@protoc_insertion_point(serialize_end:ZmqPBExampleWorkerResponse)
}

::google::protobuf::uint8* ZmqPBExampleWorkerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ZmqPBExampleWorkerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string string_out = 1;
  if (this->string_out().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_out().data(), this->string_out().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ZmqPBExampleWorkerResponse.string_out");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->string_out(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ZmqPBExampleWorkerResponse)
  return target;
}

size_t ZmqPBExampleWorkerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ZmqPBExampleWorkerResponse)
  size_t total_size = 0;

  // string string_out = 1;
  if (this->string_out().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->string_out());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZmqPBExampleWorkerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ZmqPBExampleWorkerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ZmqPBExampleWorkerResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZmqPBExampleWorkerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ZmqPBExampleWorkerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ZmqPBExampleWorkerResponse)
    MergeFrom(*source);
  }
}

void ZmqPBExampleWorkerResponse::MergeFrom(const ZmqPBExampleWorkerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ZmqPBExampleWorkerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.string_out().size() > 0) {

    string_out_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_out_);
  }
}

void ZmqPBExampleWorkerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ZmqPBExampleWorkerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZmqPBExampleWorkerResponse::CopyFrom(const ZmqPBExampleWorkerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ZmqPBExampleWorkerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZmqPBExampleWorkerResponse::IsInitialized() const {
  return true;
}

void ZmqPBExampleWorkerResponse::Swap(ZmqPBExampleWorkerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZmqPBExampleWorkerResponse::InternalSwap(ZmqPBExampleWorkerResponse* other) {
  string_out_.Swap(&other->string_out_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZmqPBExampleWorkerResponse::GetMetadata() const {
  protobuf_zmqpbexample_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zmqpbexample_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZmqPBExampleWorkerResponse

// string string_out = 1;
void ZmqPBExampleWorkerResponse::clear_string_out() {
  string_out_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ZmqPBExampleWorkerResponse::string_out() const {
  // @@protoc_insertion_point(field_get:ZmqPBExampleWorkerResponse.string_out)
  return string_out_.GetNoArena();
}
void ZmqPBExampleWorkerResponse::set_string_out(const ::std::string& value) {
  
  string_out_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ZmqPBExampleWorkerResponse.string_out)
}
#if LANG_CXX11
void ZmqPBExampleWorkerResponse::set_string_out(::std::string&& value) {
  
  string_out_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ZmqPBExampleWorkerResponse.string_out)
}
#endif
void ZmqPBExampleWorkerResponse::set_string_out(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  string_out_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ZmqPBExampleWorkerResponse.string_out)
}
void ZmqPBExampleWorkerResponse::set_string_out(const char* value, size_t size) {
  
  string_out_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ZmqPBExampleWorkerResponse.string_out)
}
::std::string* ZmqPBExampleWorkerResponse::mutable_string_out() {
  
  // @@protoc_insertion_point(field_mutable:ZmqPBExampleWorkerResponse.string_out)
  return string_out_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ZmqPBExampleWorkerResponse::release_string_out() {
  // @@protoc_insertion_point(field_release:ZmqPBExampleWorkerResponse.string_out)
  
  return string_out_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ZmqPBExampleWorkerResponse::set_allocated_string_out(::std::string* string_out) {
  if (string_out != NULL) {
    
  } else {
    
  }
  string_out_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_out);
  // @@protoc_insertion_point(field_set_allocated:ZmqPBExampleWorkerResponse.string_out)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
